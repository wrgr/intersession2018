{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Instead of 50 percentile, I change it to 30 percentile. For greycoprops function, I change homogeneity to dissimilarity and set symmetric to false, which suits EM images better. With the combination of generic_filter and np.sqrt, I write a section of code to calculate the local standard deviation. Hessian_matrix function allows me to add hessian matrix of the image as features, which boost up the percentage. After find the local entropy of each image, I uses canny to perform an edge detection as well. Lastly, I uses structure_tensor to add tensor as a feature. The f1-score is now 0.91 with a threshold of 0.5.}